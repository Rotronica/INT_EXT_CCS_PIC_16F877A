CCS PCM C Compiler, Version 5.015, 5967               29-May-25 23:59

               Filename:   E:\AUXILIAR\MICRO\LENGUAJE C\INT_RB0\Source_Code.lst

               ROM used:   125 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   063
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... /* 
....................  * Autor: Rodrigo C.C. 
....................  * El siguiente programa realiza el uso de la interrupcion externa  
....................  */ 
....................  
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses xt, nowdt, noput, noprotect, nolvp, nobrownout 
.................... #use delay(clock = 4M) 
*
004C:  MOVLW  28
004D:  MOVWF  04
004E:  BCF    03.7
004F:  MOVF   00,W
0050:  BTFSC  03.2
0051:  GOTO   060
0052:  MOVLW  01
0053:  MOVWF  78
0054:  CLRF   77
0055:  DECFSZ 77,F
0056:  GOTO   055
0057:  DECFSZ 78,F
0058:  GOTO   054
0059:  MOVLW  4A
005A:  MOVWF  77
005B:  DECFSZ 77,F
005C:  GOTO   05B
005D:  GOTO   05E
005E:  DECFSZ 00,F
005F:  GOTO   052
0060:  BCF    0A.3
0061:  BCF    0A.4
0062:  GOTO   079 (RETURN)
.................... #define  TIME  500  //Tiempo de parpadeo del led conectado al PIN_B1 
.................... #INT_EXT //Especifica que la funcion que le sigue es una interrupcion #INT_RB,#INT_TIMER0.. 
.................... //Funcion que atiende la interrupcion por externa 
.................... void INT_RB0(void){ 
....................    output_toggle(PIN_B2);  //Prende y apaga el led 
*
002F:  BSF    03.5
0030:  BCF    06.2
0031:  MOVLW  04
0032:  BCF    03.5
0033:  XORWF  06,F
0034:  BCF    0B.1
0035:  BCF    0A.3
0036:  BCF    0A.4
0037:  GOTO   01B
.................... } 
.................... //Prototipo de funciones 
.................... void configurar_hardware(void); 
....................  
.................... void configurar_hardware(void){ 
....................    set_tris_b(0x01); // Configura el puerto como entrada o salida 
0038:  MOVLW  01
0039:  BSF    03.5
003A:  MOVWF  06
....................    output_low(PIN_B1);  //Se coloca en bajo el pin RB1 
003B:  BCF    06.1
003C:  BCF    03.5
003D:  BCF    06.1
....................    output_low(PIN_B2);  //Se coloca en bajo el pin RB2 
003E:  BSF    03.5
003F:  BCF    06.2
0040:  BCF    03.5
0041:  BCF    06.2
....................    //Se activan las resistencias pull-ups 
....................    PORT_B_PULLUPS(true); 
0042:  BSF    03.5
0043:  BCF    01.7
....................    //habilitar interrupcion INT RB0 
....................    ext_int_edge(H_TO_L);   //Escoger por flanco de alto a bajo 
0044:  BCF    01.6
....................    enable_interrupts(INT_EXT);   //Activar interrupcion externa 
0045:  BCF    03.5
0046:  BSF    0B.4
....................    enable_interrupts(GLOBAL);    //Activar interrupcion global 
0047:  MOVLW  C0
0048:  IORWF  0B,F
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   070 (RETURN)
.................... } 
....................  
.................... //Funcion principal 
.................... void main(void){ 
*
0063:  MOVF   03,W
0064:  ANDLW  1F
0065:  MOVWF  03
0066:  BSF    03.5
0067:  BSF    1F.0
0068:  BSF    1F.1
0069:  BSF    1F.2
006A:  BCF    1F.3
006B:  MOVLW  07
006C:  MOVWF  1C
006D:  BCF    03.7
....................    configurar_hardware();  //Configuracion de registros 
006E:  BCF    03.5
006F:  GOTO   038
....................    while(true){ 
....................       output_toggle(PIN_B1);  //Enciende apaga led 
0070:  BSF    03.5
0071:  BCF    06.1
0072:  MOVLW  02
0073:  BCF    03.5
0074:  XORWF  06,F
....................       delay_ms(TIME);         //Tiempo de encendido 
0075:  MOVWF  27
0076:  MOVLW  FA
0077:  MOVWF  28
0078:  GOTO   04C
0079:  DECFSZ 27,F
007A:  GOTO   076
007B:  GOTO   070
....................    } 
.................... } 
007C:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
